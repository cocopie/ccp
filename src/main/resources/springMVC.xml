<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	<!-- 引入service配置 -->
	<import resource="classpath:ccp_service_applicationContext.xml" />

	<!-- 自动扫描controller包，可以写多个,逗号隔开 -->
	<context:component-scan base-package="com.ccp.core.controller" />
	<context:component-scan base-package="com.ccp.testing.controller" />
	<mvc:annotation-driven />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 把jsp文件放到WEB-INF外面是为了让前端方便调试，提高开发速度 -->
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>
	

	<!-- 拦截器 -->
	<!--
		<mvc:interceptors>
			
			<bean class="com.ccp.interceptor.VisitInterceptor" />
			<bean class="org.springframework.web.context.request.Log4jNestedDiagnosticContextInterceptor" />
			<bean class="com.ccp.interceptor.VisitInterceptor" />
			-->
			<!--<mvc:interceptor>
				<mvc:mapping path="/a/*"/>
				<bean class="com.ccp.interceptor.VisitInterceptor"/>
			</mvc:interceptor>
		
		</mvc:interceptors>-->
		
	<!-- 对静态资源文件的访问  方案二 （二选一）-->
	<mvc:resources mapping="/images/**" location="/images/"
		cache-period="31556926" />
	<mvc:resources mapping="/js/**" location="/js/"
		cache-period="31556926" />
	<mvc:resources mapping="/html/**" location="/html/"
		cache-period="31556926" />
	<!-- 上传拦截，如最大上传值及最小上传值 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="10000000" />
	</bean>

	<!-- 总错误处理-->
	<bean id="exceptionResolver" class="com.ccp.util.CcpExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 上传文件大于最大尺寸后转向出错页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">
					redirect:/uploadError.jsp
                </prop>
                <!--<prop key="java.lang.Exception">/error</prop> 
			--></props>
		</property>
		<property name="defaultErrorView">
			<value>forward:/error.jsp</value>
		</property>
		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver
			</value>
		</property>
	</bean>

	<!--
		用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring
		bean对象
	-->
	<bean class="com.ccp.util.SpringContextHolder" lazy-init="false" />
</beans>